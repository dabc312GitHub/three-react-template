{"version":3,"sources":["../node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["GLTFLoader","manager","Loader","call","this","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","name","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","MeshPhysicalMaterial","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","Vector2","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","copy","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","indices","createAttributesKey","mode","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","setIndex","box","Box3","min","max","Vector3","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","geometryPromise","cached","promise","BufferGeometry","meshIndex","depthTest","FrontSide","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","camera","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"static/js/3.1da31b23.chunk.js","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}