{"version":3,"sources":["common/constants.ts","samples/index.ts","App.tsx","index.tsx"],"names":["SAMPLE_TYPE","CONTROL_TYPE","BasicDemo","tags","DEMO","desc","Component","lazy","ModelLoader","BoxSplitDemo","TestBoxSplit","TEST","TestRaycastHlp","HeightmapGenTool","TOOL","SAMPLES","Samples","sampleItems","Object","entries","reduce","acc","name","item","App","basename","exact","path","component","LoadSample","WelcomePage","items","className","keys","map","sampleName","i","key","toString","to","match","params","sample","urlArg","URLSearchParams","useLocation","search","get","caseId","useParams","case","arg","console","log","Sample","fallback","WEBGL","isWebGL2Available","document","body","appendChild","getWebGL2ErrorMessage","render","getElementById"],"mappings":"mgBAAYA,EAMAC,E,oGANAD,O,eAAAA,I,eAAAA,I,gBAAAA,M,cAMAC,O,iBAAAA,I,0BAAAA,M,KCHZ,IAAMC,EAAY,CAChBC,KAAM,CAACH,EAAYI,MACnBC,KACE,wGAEFC,UAAWC,gBAAK,kBAAM,+DAElBC,EAAc,CAClBL,KAAM,CAACH,EAAYI,MACnBC,KAAM,+CACNC,UAAWC,gBAAK,kBAAM,sEAElBE,EAAe,CACnBN,KAAM,CAACH,EAAYI,MACnBC,KAAM,kCACNC,UAAWC,gBAAK,kBAAM,8DAElBG,EAAe,CACnBP,KAAM,CAACH,EAAYW,MACnBN,KAAM,GACNC,UAAWC,gBAAK,kBAAM,8DAElBK,EAAiB,CACrBT,KAAM,CAACH,EAAYW,MACnBN,KAAM,GACNC,UAAWC,gBAAK,kBAAM,8DAElBM,EAAmB,CACvBV,KAAM,CAACH,EAAYc,MACnBT,KAAM,qDACNC,UAAWC,gBAAK,kBAAM,+DCrBlBQ,EAAcC,EACdC,EAAmBC,OAAOC,QAAQJ,GAASK,QAC/C,SAACC,EAAD,0BAAOC,EAAP,KAAaC,EAAb,2BAA6BF,EAA7B,eAAmCC,EAAOC,MAC1C,IAYK,IAAMC,EAAM,WACjB,OACE,oCACE,kBAAC,IAAD,CAAQC,SAAS,yBAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWC,QAWvCC,EAAc,WACzB,IAAsBC,EAOtB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,8CACA,6DAEF,6BACA,wEANF,IAMsD,6BACpD,6BAfkBD,EAeAd,EAdbC,OAAOe,KAAKF,GAAOG,KAAI,SAACC,EAAYC,GAAb,OAC5B,wBAAIC,IAAKD,EAAEE,YACT,kBAAC,IAAD,CAAMC,GAAI,IAAMJ,GAAaA,WAsBxBN,EAAa,SAAC,GAAoB,IAEzCP,EAFwC,EAAjBkB,MAEVC,OAAOC,OAEpBC,EA1DG,IAAIC,gBAAgBC,cAAcC,QA0DtBC,IAAI,WACjBC,EAAWC,cAAXD,OACFN,EAAS,CACXpB,KAAMA,EAENjB,KAAMU,EAAQO,GAAMjB,KACpB6C,KAAMF,EACNG,IAAKR,GAIPS,QAAQC,IAAIX,GACZ,IACMY,EADUrC,EAAYyB,EAAOpB,MACfhB,UAEpB,OACE,kBAAC,WAAD,CAAUiD,SAAU,MAClB,kBAACD,EAAD,CAAQZ,OAAQA,OCzFY,IAA9Bc,IAAMC,qBACRC,SAASC,KAAKC,YAAYJ,IAAMK,yBAGlCC,iBAAO,kBAAC,EAAD,MAASJ,SAASK,eAAe,W","file":"static/js/main.779b955d.chunk.js","sourcesContent":["export enum SAMPLE_TYPE {\n  DEMO,\n  TEST,\n  TOOL\n}\n\nexport enum CONTROL_TYPE {\n  ORBIT,\n  TRANSFORM\n  // FLY\n}\n","import { lazy } from \"react\";\nimport { SAMPLE_TYPE } from \"../common/constants\";\n\nconst BasicDemo = {\n  tags: [SAMPLE_TYPE.DEMO],\n  desc:\n    \"A demo showing basic scene setup with animation, lights, shadows, controls, ..\" +\n    \"click on box to move it\",\n  Component: lazy(() => import(\"./BasicDemo\"))\n};\nconst ModelLoader = {\n  tags: [SAMPLE_TYPE.DEMO],\n  desc: \"please allow some time for the model to load\",\n  Component: lazy(() => import(\"./ModelLoader\"))\n};\nconst BoxSplitDemo = {\n  tags: [SAMPLE_TYPE.DEMO],\n  desc: \"Press space key to toggle anim.\",\n  Component: lazy(() => import(\"../samples/BoxSplitDemo\"))\n};\nconst TestBoxSplit = {\n  tags: [SAMPLE_TYPE.TEST],\n  desc: \"\",\n  Component: lazy(() => import(\"../samples/BoxSplit.test\"))\n};\nconst TestRaycastHlp = {\n  tags: [SAMPLE_TYPE.TEST],\n  desc: \"\",\n  Component: lazy(() => import(\"../samples/RaycastHlp.test\"))\n};\nconst HeightmapGenTool = {\n  tags: [SAMPLE_TYPE.TOOL],\n  desc: \"generates heightmaps from various height functions\",\n  Component: lazy(() => import(\"../samples/Tools/HeightmapGen\"))\n};\n\nexport {\n  BasicDemo,\n  ModelLoader,\n  BoxSplitDemo,\n  HeightmapGenTool,\n  TestBoxSplit,\n  TestRaycastHlp\n};\n","import React, { Suspense, useEffect } from \"react\";\nimport {\n  Link,\n  useLocation,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport * as Samples from \"./samples\";\n// import { useSampleStates } from './common/states';\nconst SAMPLES:any = Samples;\nconst sampleItems: any = Object.entries(SAMPLES).reduce(\n  (acc, [name, item]) => ({ ...acc, [name]: item }),\n  {}\n);\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n/**\n * route to sample path and support sampleId\n */\nexport const App = () => {\n  return (\n    <>\n      <Router basename=\"/three-react-template\">\n        {/* <Route path=\"/\" component={App} /> */}\n        <Switch>\n          <Route exact path=\"/\">\n            <WelcomePage />\n          </Route>\n          {/* <LoadSample sample={sample} /> */}\n          <Route exact path=\"/:sample\" component={LoadSample} />\n          <Route path=\"/:sample/:caseId\" component={LoadSample} />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\n/**\n * List all availables samples in the sandbox\n * @param param0\n */\nexport const WelcomePage = () => {\n  const getItemsList = (items: {}) => {\n    return Object.keys(items).map((sampleName, i) => (\n      <li key={i.toString()}>\n        <Link to={\"/\" + sampleName}>{sampleName}</Link>\n      </li>\n    ));\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h2>ThreeSandbox! </h2>\n        <h3>A playground for 3D projects</h3>\n      </div>\n      <hr />\n      <span>Sandbox contains the following samples</span> <br />\n      <ul>{getItemsList(sampleItems)}</ul>\n    </div>\n  );\n};\n\n/**\n * Load a specific sample\n * @param param0\n * export sample in states\n */\nexport const LoadSample = ({ match }: any) => {\n  // const setSample = useSampleStates(state => state.setSample);\n  let name = match.params.sample;\n  let query = useQuery();\n  let urlArg = query.get(\"sampArg\");\n  let { caseId } = useParams();\n  var sample = {\n    name: name,\n    // type: Number(query.get(\"type\")),\n    desc: SAMPLES[name].desc,\n    case: caseId,\n    arg: urlArg\n  };\n\n  // setSample(sample); // externalize to Sample States\n  console.log(sample);\n  var item: any = sampleItems[sample.name];\n  const Sample = item.Component;\n  // sample.type = item.tags[0];\n  return (\n    <Suspense fallback={null}>\n      <Sample sample={sample} />\n    </Suspense>\n  );\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport \"./theme.css\";\nimport { WEBGL } from \"three/examples/jsm/WebGL.js\";\nimport { App } from \"./App\";\n\nif (WEBGL.isWebGL2Available() === false) {\n  document.body.appendChild(WEBGL.getWebGL2ErrorMessage());\n}\n\nrender(<App />, document.getElementById(\"root\"));\n\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}